import java.util.Scanner;


public class Order extends Car{
	
	static Scanner scan = new Scanner(System.in);
	
	int a=99, b=99, op1=99, op2=99;
		// a : engineType
		// b : engineCapa
		// op1 : 승용차 색상 or 트럭 바퀴수 or 버스종류
		// op2 : 승용차 승차인원 or 트럭 화물적재량 or 버스승차인원
	Order(int menu){
		//생성자 디폴트 Order(승용차트럭버스중에1)
		//주문받자마자 주문객체 생성하겠다!
		
		switch(menu){ //menu번호에 따라 주문 다르게 실행
		case 1:
			automobileOrder();
			break;
		case 2:
			truckOrder();
			break;
		case 3:
			busOrder();
			break;
		} 
			//switch문 끝나면 선택된 차종의 옵션이 a, b, op1, op2에 각각 저장됨
			//main함수에서 getA, getB, getOp1, getOp2 메소드로 값 전달??
	}


/***************************차종별 주문 메소드*******************************/
	 
	 private void automobileOrder(){
		 System.out.println("");
		 //1. 엔진타입 - a에 저장
		 System.out.println("1. 엔진 타입을 입력하세요 (ex: 가솔린)");
		 do{
			 if(a!=99){
				System.out.println("다시 입력하세요");
			 }
			 a = scan.nextInt();
		 } while (a>4);
		 //2. 엔진용량 - b에 저장
		 System.out.println("2. 엔진 용량을 입력하세요 (ex: 3000)");
		 do{
			 if(b!=99){
				System.out.println("다시 입력하세요");
			 }
			 b = scan.nextInt();
		 } while (b>4);
		 //3.  - op1에 저장
		 System.out.println("3. 자동차의 색상을 입력하세요 (ex: 검정)");
		 do{
			 if(op1!=99){
				System.out.println("다시 입력하세요");
			 }
			 op1 = scan.nextInt();
		 } while (op1>6);
		 //4.  - op2에 저장
		 System.out.println("4. 승차인원을 입력하세요 (ex: 2)");
		 do{
			 if(op2!=99){
				System.out.println("다시 입력하세요");
			 }
			 op2 = scan.nextInt();
		 } while (op2>3);
	 }
	 
	 private void truckOrder(){
		 System.out.println("");
		 //1. 엔진타입 - a에 저장
		 	a=99;
		 //2. 엔진용량 - b에 저장
		 System.out.println("1. 엔진 용량을 입력하세요 (ex: 3000)");
		 do{
			 if(b!=99){
				System.out.println("다시 입력하세요");
			 }
			 b = scan.nextInt();
		 } while (b>3);
		 
		 //3.  - op1에 저장
		 System.out.println("2. 트럭의 바퀴 수를 입력하세요 (ex: 6)");
		 do{
			 if(op1!=99){
				System.out.println("다시 입력하세요");
			 }
			 op1 = scan.nextInt();
		 } while (op1>3);
		 
		 
		 //4.  - op2에 저장
		 System.out.println("3. 트럭의 화물적재량(톤)을 입력하세요 (ex: 1)");
		 do{
			 if(op2!=99){
				System.out.println("다시 입력하세요");
			 }
			 op2 = scan.nextInt();
		 } while (op2>3);
		 
		 	 
	}
	 
	 private void busOrder(){
		 System.out.println("");
		 //1. 엔진타입 - a에 저장
		 System.out.println("1. 엔진 타입을 입력하세요 (ex: 디젤)");
		 do{
			 if(a!=99){
				System.out.println("다시 입력하세요");
			 }
			 a = scan.nextInt();
		 } while (a>2);
		 //2. 엔진용량 - b에 저장
		 System.out.println("2. 엔진 용량을 입력하세요 (ex: 3000)");
		 do{
			 if(b!=99){
				System.out.println("다시 입력하세요");
			 }
			 b = scan.nextInt();
		 } while (b>2);
		 //3.  버스종류 - op1에 저장
		 System.out.println("3. 버스종류를 선택하세요 (ex: 고속버스)");
		 do{
			 if(op1!=99){
				System.out.println("다시 입력하세요");
			 }
			 op1 = scan.nextInt();
		 } while (op1>2);
		 //4.  승차인원 - op2에 저장
		 if (op1==1){
			 op2 = 45; //고속버스일 경우 승차인원 45명
		 } else {
			 op2 = 60; //일반버스일 경우 승차인원 60명
		 }
	 }
	 
/**************캡슐화*************/	 
	 
	 //주문받고 입력하는 과정을 private화 하여 Order 클래스의 멤버변수에 저장
	 //멤버변수에 저장된 값을 사용하기 위한 메소드를 다음과 같이 public 접근제한자로 정의
	 public String getA (){
		 return a;
	 } 	 
	 public int getB (){
		 return b;
	 }
	 public String getOp1 (){
		 return op1;
	 }
	 public int getOp2 (){
		 return op2;
	 }
	 
} //class끝
